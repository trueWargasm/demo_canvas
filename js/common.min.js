$(function () {		
    var canvas = new fabric.Canvas('canvas', { isDrawingMode: false });
	var imageUrl = "/img/60/grid/3x4.png";

	// Define 
	canvas.setBackgroundImage(imageUrl, canvas.renderAll.bind(canvas), {
		scaleX: 1,
		scaleY: 1,
		left: 20,
		top: 20,
		originX: 'left',
		originY: 'top',
		backgroundImageStretch: false
	});

    fabric.Object.prototype.transparentCorners = false;
    canvas.setHeight(550);
    canvas.setWidth(650);

    var _mouseX, _mouseY, _json_type;

    var json_rect, json_rect_green, json_rect_red, json_rect_yellow, json_rect_blue, json_rect_orange;

    canvas.on('object:moving', function (e) {
        var obj = e.target;
        if(obj.currentHeight > obj.canvas.height || obj.currentWidth > obj.canvas.width){
            return;
        }        
        obj.setCoords();        
        if(obj.getBoundingRect().top < 0 || obj.getBoundingRect().left < 0){
            obj.top = Math.max(obj.top, obj.top-obj.getBoundingRect().top);
            obj.left = Math.max(obj.left, obj.left-obj.getBoundingRect().left);
        }
        if(obj.getBoundingRect().top+obj.getBoundingRect().height  > obj.canvas.height || obj.getBoundingRect().left+obj.getBoundingRect().width  > obj.canvas.width){
            obj.top = Math.min(obj.top, obj.canvas.height-obj.getBoundingRect().height+obj.top-obj.getBoundingRect().top);
            obj.left = Math.min(obj.left, obj.canvas.width-obj.getBoundingRect().width+obj.left-obj.getBoundingRect().left);
        }
    });

    $(".rect").draggable({
        helper: "clone",
        appendTo: "body",
        revert: "invalid",
        snap: ".tapad",
        stack: ".rect",
        scroll: false
    });
    $("#delete").click(function(){
        canvas.isDrawingMode = false;
        deleteObjects();
    });

    $("#canvas").droppable({
        cursor: "move",
        accept: ".rect",
        activeClass: "snaptarget-hover",
        drop: function (event, ui) {
            /*if (ui.draggable.context.lastElementChild.id == "item_1"){
                _json_type = "rect_green";
            } else if (ui.draggable.context.lastElementChild.id == "item_2") {
                _json_type = "rect_red";
            } else if (ui.draggable.context.lastElementChild.id == "item_3") {
                _json_type = "rect_blue";
            } else  if (ui.draggable.context.lastElementChild.id == "item_4") {
                _json_type = "rect_yellow";
            } else if (ui.draggable.context.lastElementChild.id == "item_5") {
                _json_type = "rect_orange";
            } else if (ui.draggable.context.lastElementChild.id == "item_6") {
                _json_type = "rect_blue";
            } else  if (ui.draggable.context.lastElementChild.id == "item_7") {
                _json_type = "rect_red";
            } else  if (ui.draggable.context.lastElementChild.id == "item_8") {
                _json_type = "rect_yellow";
            } else {
                console.log("error is occured.")
            }*/
			_json_type = ui.draggable.context.lastElementChild.id;
            
            var pos = $("#dragBoard");
            _mouseX = event.pageX - pos.position().left;
            _mouseY = event.pageY - pos.position().top;
            
			//base object
            json_rect = { "angle" : 0 ,
                 "fill" : "#454546" ,
                 "flipX" : false ,
                 "flipY" : false ,
                 "hasBorders" : true ,
                 "hasControls" : true ,
                 "hasRotatingPoint" : true ,
                 "height" : 60 ,
                 "opacity" : 1 ,
                 "originX" : "center" ,
                 "originY" : "center" ,
                 "overlayFill" : null ,
                 "perPixelTargetFind" : false ,
                 "rx" : 0 ,
                 "ry" : 0 ,
                 "scaleX" : 1 ,
                 "scaleY" : 1 ,
                 "lockScalingX" : true ,
                 "lockScalingY" : true ,
                 "selectable" : true ,
                 "shadow" : null ,
                 "stroke" : null ,
                 "strokeDashArray" : null ,
                 "strokeWidth" : 1 ,
                 "transparentCorners" : false ,
                 "type" : "rect" ,
                 "visible" : true ,
                 "width" : 60 
				};
				 
			json_rect.left = _mouseX;
			json_rect.top = _mouseY;

			var items = {};
			
			var chr_305 = jQuery.extend(true, {}, json_rect);
			chr_305.fill = "transparent";
			chr_305.backgroundImage = "/img/60/items/chr-305.png";
			//chr_305.costValue = 1000;
			items.chr_305 = chr_305;
			
			var chr_300 = jQuery.extend(true, {}, json_rect);
			chr_300.fill = "transparent";
			chr_300.backgroundImage = "/img/60/items/chr-300.png";
			//chr_300.costValue = 1000;
			items.chr_300 = chr_300;
			
			var tbl_335 = jQuery.extend(true, {}, json_rect);
			tbl_335.fill = "transparent";
			tbl_335.width = 138;
			tbl_335.height = 75;
			tbl_335.backgroundImage = "/img/60/items/tbl-335.png";
			//tbl_335.costValue = 1000;
			items.tbl_335 = tbl_335;
			
			var tbl_310 = jQuery.extend(true, {}, json_rect);
			tbl_310.fill = "transparent";
			tbl_310.width = 81;
			tbl_310.height = 81;
			tbl_310.backgroundImage = "/img/60/items/tbl-310.png";
			//chr_300.costValue = 1000;
			items.tbl_310 = tbl_310;
			
			var tbl_336 = jQuery.extend(true, {}, json_rect);
			tbl_336.fill = "transparent";
			tbl_336.width = 102;
			tbl_336.height = 95;
			tbl_336.backgroundImage = "/img/60/items/tbl-336.png";
			tbl_336.costValue = 1000;
			items.tbl_336 = tbl_336;
			
			var chr_buk_305 = jQuery.extend(true, {}, json_rect);
			chr_buk_305.fill = "transparent";
			chr_buk_305.backgroundImage = "/img/60/items/chr-buk-305.png";
			chr_buk_305.costValue = 1000;
			items.chr_buk_305 = chr_buk_305;
			
			var chr_334 = jQuery.extend(true, {}, json_rect);
			chr_334.fill = "transparent";
			chr_334.width = 158;
			chr_334.height = 88;
			chr_334.backgroundImage = "/img/60/items/chr-334.png";
			chr_334.costValue = 1500;
			items.chr_334 = chr_334;
			
			var chr_blk_334 = jQuery.extend(true, {}, json_rect);
			chr_blk_334.fill = "transparent";
			chr_blk_334.width = 158;
			chr_blk_334.height = 88;
			chr_blk_334.backgroundImage = "/img/60/items/chr-blk-334.png";
			chr_blk_334.costValue = 1500;
			items.chr_blk_334 = chr_blk_334;

            var clonedObject = null;

			clonedObject = new fabric.Rect(items[_json_type]);
			fabric.util.loadImage(clonedObject.backgroundImage, function (img) {
				clonedObject.setPatternFill({
					source: img,
					repeat: 'no-repeat'
				});
			});
			addCost(clonedObject.costValue);
				


            var oldLeft = clonedObject.getLeft();
            var oldTop = clonedObject.getTop();

            clonedObject.setLeft(oldLeft + 10);
            clonedObject.setTop(oldTop + 10);

            var boundingRect = clonedObject.getBoundingRect(true);
            if (boundingRect.left + boundingRect.width > canvas.getWidth()) {
                clonedObject.setLeft(oldLeft);
            }
            if (boundingRect.top + boundingRect.height > canvas.getHeight()) {
                clonedObject.setTop(oldTop);
            }

            canvas.add(clonedObject);
            canvas.setActiveObject(clonedObject);
            canvas.renderAll();

        }
    });

    var total = $('#total');
    total.html(18000);

    function addCost(value) {
        if(value === '' || value === undefined) {
            value = 0;
        }
        var cost = total.html();
        total.html(parseInt(cost) + parseInt(value));
    }
    
    function deleteObjects(){
        var activeObject = canvas.getActiveObject(),
        activeGroup = canvas.getActiveGroup();
        if (activeObject) {
            if (confirm('Удалить элемент?')) {
                canvas.remove(activeObject);
				if(activeObject.costValue > 0) {
					addCost(activeObject.costValue * -1)
				}
				
            }
        }
    }
});
