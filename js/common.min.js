$(function () {		
    var canvas = new fabric.Canvas('canvas', { isDrawingMode: false });

    fabric.Object.prototype.transparentCorners = false;
    canvas.setHeight(550);
    canvas.setWidth(650);

    var _mouseX, _mouseY, _json_type;

    var json_rect, json_rect_green, json_rect_red, json_rect_yellow, json_rect_blue, json_rect_orange;

    canvas.on('object:moving', function (e) {
        var obj = e.target;
        if(obj.currentHeight > obj.canvas.height || obj.currentWidth > obj.canvas.width){
            return;
        }        
        obj.setCoords();        
        if(obj.getBoundingRect().top < 0 || obj.getBoundingRect().left < 0){
            obj.top = Math.max(obj.top, obj.top-obj.getBoundingRect().top);
            obj.left = Math.max(obj.left, obj.left-obj.getBoundingRect().left);
        }
        if(obj.getBoundingRect().top+obj.getBoundingRect().height  > obj.canvas.height || obj.getBoundingRect().left+obj.getBoundingRect().width  > obj.canvas.width){
            obj.top = Math.min(obj.top, obj.canvas.height-obj.getBoundingRect().height+obj.top-obj.getBoundingRect().top);
            obj.left = Math.min(obj.left, obj.canvas.width-obj.getBoundingRect().width+obj.left-obj.getBoundingRect().left);
        }
    });

    $(".rect").draggable({
        helper: "clone",
        appendTo: "body",
        revert: "invalid",
        snap: ".tapad",
        stack: ".rect",
        scroll: false
    });
    $("#delete").click(function(){
        canvas.isDrawingMode = false;
        deleteObjects();
    });

    $("#canvas").droppable({
        cursor: "move",
        accept: ".rect",
        activeClass: "snaptarget-hover",
        drop: function (event, ui) {
            if (ui.draggable.context.lastElementChild.id == "item_1"){
                _json_type = "rect_green";
            } else if (ui.draggable.context.lastElementChild.id == "item_2") {
                _json_type = "rect_red";
            } else if (ui.draggable.context.lastElementChild.id == "item_3") {
                _json_type = "rect_blue";
            } else  if (ui.draggable.context.lastElementChild.id == "item_4") {
                _json_type = "rect_yellow";
            } else if (ui.draggable.context.lastElementChild.id == "item_5") {
                addCost(500);
                _json_type = "rect_orange";
            } else if (ui.draggable.context.lastElementChild.id == "item_6") {
                addCost(500);
                _json_type = "rect_blue";
            } else  if (ui.draggable.context.lastElementChild.id == "item_7") {
                addCost(1000);
                _json_type = "rect_red";
            } else  if (ui.draggable.context.lastElementChild.id == "item_8") {
                addCost(10000);
                _json_type = "rect_yellow";
            } else {
                console.log("error is occured.")
            }
            
            var pos = $("#dragBoard");
            _mouseX = event.pageX - pos.position().left;
            _mouseY = event.pageY - pos.position().top;
            
            json_rect = '{ "angle" : 0 ,' +
                ' "fill" : "#454546" ,' +
                ' "flipX" : false ,' +
                ' "flipY" : false ,' +
                ' "hasBorders" : true ,' +
                ' "hasControls" : true ,' +
                ' "hasRotatingPoint" : true ,' +
                ' "height" : 60 ,' +
                ' "left" : ' + _mouseX + ' , ' +
                ' "opacity" : 1 ,' +
                ' "originX" : "center" ,' +
                ' "originY" : "center" ,' +
                ' "overlayFill" : null ,' +
                ' "perPixelTargetFind" : false ,' +
                ' "rx" : 0 ,' +
                ' "ry" : 0 ,' +
                ' "scaleX" : 1 ,' +
                ' "scaleY" : 1 ,' +
                ' "lockScalingX" : true ,' +
                ' "lockScalingY" : true ,' +
                ' "selectable" : true ,' +
                ' "shadow" : null ,' +
                ' "stroke" : null ,' +
                ' "strokeDashArray" : null ,' +
                ' "strokeWidth" : 1 ,' +
                ' "top" : ' + _mouseY + ' , ' +
                ' "transparentCorners" : false ,' +
                ' "type" : "rect" ,' +
                ' "visible" : true ,' +
                ' "width" : 60 }';

            json_rect_green = '{ "angle" : 0 ,' +
                ' "fill" : "#27ae60" ,' +
                ' "flipX" : false ,' +
                ' "flipY" : false ,' +
                ' "hasBorders" : true ,' +
                ' "hasControls" : true ,' +
                ' "hasRotatingPoint" : true ,' +
                ' "height" : 60 ,' +
                ' "left" : ' + _mouseX + ' , ' +
                ' "opacity" : 1 ,' +
                ' "originX" : "center" ,' +
                ' "originY" : "center" ,' +
                ' "overlayFill" : null ,' +
                ' "perPixelTargetFind" : false ,' +
                ' "rx" : 0 ,' +
                ' "ry" : 0 ,' +
                ' "scaleX" : 1 ,' +
                ' "scaleY" : 1 ,' +
                ' "lockScalingX" : true ,' +
                ' "lockScalingY" : true ,' +
                ' "selectable" : true ,' +
                ' "shadow" : null ,' +
                ' "stroke" : null ,' +
                ' "strokeDashArray" : null ,' +
                ' "strokeWidth" : 1 ,' +
                ' "top" : ' + _mouseY + ' , ' +
                ' "transparentCorners" : false ,' +
                ' "type" : "rect" ,' +
                ' "visible" : true ,' +
                ' "width" : 60 }';

            json_rect_red = '{ "angle" : 0 ,' +
                ' "fill" : "#c0392b" ,' +
                ' "flipX" : false ,' +
                ' "flipY" : false ,' +
                ' "hasBorders" : true ,' +
                ' "hasControls" : true ,' +
                ' "hasRotatingPoint" : true ,' +
                ' "height" : 60 ,' +
                ' "left" : ' + _mouseX + ' , ' +
                ' "opacity" : 1 ,' +
                ' "originX" : "center" ,' +
                ' "originY" : "center" ,' +
                ' "overlayFill" : null ,' +
                ' "perPixelTargetFind" : false ,' +
                ' "rx" : 0 ,' +
                ' "ry" : 0 ,' +
                ' "scaleX" : 1 ,' +
                ' "scaleY" : 1 ,' +
                ' "lockScalingX" : true ,' +
                ' "lockScalingY" : true ,' +
                ' "selectable" : true ,' +
                ' "shadow" : null ,' +
                ' "stroke" : null ,' +
                ' "strokeDashArray" : null ,' +
                ' "strokeWidth" : 1 ,' +
                ' "top" : ' + _mouseY + ' , ' +
                ' "transparentCorners" : false ,' +
                ' "type" : "rect" ,' +
                ' "visible" : true ,' +
                ' "width" : 60 }';

            json_rect_yellow = '{ "angle" : 0 ,' +
                ' "fill" : "#f39c12" ,' +
                ' "flipX" : false ,' +
                ' "flipY" : false ,' +
                ' "hasBorders" : true ,' +
                ' "hasControls" : true ,' +
                ' "hasRotatingPoint" : true ,' +
                ' "height" : 60 ,' +
                ' "left" : ' + _mouseX + ' , ' +
                ' "opacity" : 1 ,' +
                ' "originX" : "center" ,' +
                ' "originY" : "center" ,' +
                ' "overlayFill" : null ,' +
                ' "perPixelTargetFind" : false ,' +
                ' "rx" : 0 ,' +
                ' "ry" : 0 ,' +
                ' "scaleX" : 1 ,' +
                ' "scaleY" : 1 ,' +
                ' "lockScalingX" : true ,' +
                ' "lockScalingY" : true ,' +
                ' "selectable" : true ,' +
                ' "shadow" : null ,' +
                ' "stroke" : null ,' +
                ' "strokeDashArray" : null ,' +
                ' "strokeWidth" : 1 ,' +
                ' "top" : ' + _mouseY + ' , ' +
                ' "transparentCorners" : false ,' +
                ' "type" : "rect" ,' +
                ' "visible" : true ,' +
                ' "width" : 60 }';

            json_rect_blue = '{ "angle" : 0 ,' +
                ' "fill" : "#2980b9" ,' +
                ' "flipX" : false ,' +
                ' "flipY" : false ,' +
                ' "hasBorders" : true ,' +
                ' "hasControls" : true ,' +
                ' "hasRotatingPoint" : true ,' +
                ' "height" : 60 ,' +
                ' "left" : ' + _mouseX + ' , ' +
                ' "opacity" : 1 ,' +
                ' "originX" : "center" ,' +
                ' "originY" : "center" ,' +
                ' "overlayFill" : null ,' +
                ' "perPixelTargetFind" : false ,' +
                ' "rx" : 0 ,' +
                ' "ry" : 0 ,' +
                ' "scaleX" : 1 ,' +
                ' "scaleY" : 1 ,' +
                ' "lockScalingX" : true ,' +
                ' "lockScalingY" : true ,' +
                ' "selectable" : true ,' +
                ' "shadow" : null ,' +
                ' "stroke" : null ,' +
                ' "strokeDashArray" : null ,' +
                ' "strokeWidth" : 1 ,' +
                ' "top" : ' + _mouseY + ' , ' +
                ' "transparentCorners" : false ,' +
                ' "type" : "rect" ,' +
                ' "visible" : true ,' +
                ' "width" : 60 }';

            json_rect_orange = '{ "angle" : 0 ,' +
                ' "fill" : "#d35400" ,' +
                ' "flipX" : false ,' +
                ' "flipY" : false ,' +
                ' "hasBorders" : true ,' +
                ' "hasControls" : true ,' +
                ' "hasRotatingPoint" : true ,' +
                ' "height" : 60 ,' +
                ' "left" : ' + _mouseX + ' , ' +
                ' "opacity" : 1 ,' +
                ' "originX" : "center" ,' +
                ' "originY" : "center" ,' +
                ' "overlayFill" : null ,' +
                ' "perPixelTargetFind" : false ,' +
                ' "rx" : 0 ,' +
                ' "ry" : 0 ,' +
                ' "scaleX" : 1 ,' +
                ' "scaleY" : 1 ,' +
                ' "lockScalingX" : true ,' +
                ' "lockScalingY" : true ,' +
                ' "selectable" : true ,' +
                ' "shadow" : null ,' +
                ' "stroke" : null ,' +
                ' "strokeDashArray" : null ,' +
                ' "strokeWidth" : 1 ,' +
                ' "top" : ' + _mouseY + ' , ' +
                ' "transparentCorners" : false ,' +
                ' "type" : "rect" ,' +
                ' "visible" : true ,' +
                ' "width" : 60 }';

            var clonedObject = null;
            var temp = null;
            if (_json_type == 'rect') {
                temp = JSON.parse(json_rect);
                clonedObject = new fabric.Rect(temp);
            } else if (_json_type == 'rect_green') {
                temp = JSON.parse(json_rect_green);
                clonedObject = new fabric.Rect(temp);
            } else if (_json_type == 'rect_red') {
                temp = JSON.parse(json_rect_red);
                clonedObject = new fabric.Rect(temp);
            } else if (_json_type == 'rect_yellow') {
                temp = JSON.parse(json_rect_yellow);
                clonedObject = new fabric.Rect(temp);
            } else if (_json_type == 'rect_blue') {
                temp = JSON.parse(json_rect_blue);
                clonedObject = new fabric.Rect(temp);
            } else if (_json_type == 'rect_orange') {
                temp = JSON.parse(json_rect_orange);
                clonedObject = new fabric.Rect(temp);
            } else {
                console.log('unknown object type: ' + _json_type);
                return;
            }

            var oldLeft = clonedObject.getLeft();
            var oldTop = clonedObject.getTop();

            clonedObject.setLeft(oldLeft + 10);
            clonedObject.setTop(oldTop + 10);

            var boundingRect = clonedObject.getBoundingRect(true);
            if (boundingRect.left + boundingRect.width > canvas.getWidth()) {
                clonedObject.setLeft(oldLeft);
            }
            if (boundingRect.top + boundingRect.height > canvas.getHeight()) {
                clonedObject.setTop(oldTop);
            }

            canvas.add(clonedObject);
            canvas.setActiveObject(clonedObject);
            canvas.renderAll();

        }
    });

    var total = $('#total');
    total.html(18000);

    function addCost(value) {
        if(value === '') {
            value = 0;
        }
        var cost = total.html();
        total.html(parseInt(cost) + parseInt(value));
    }
    
    function deleteObjects(){
        var activeObject = canvas.getActiveObject(),
        activeGroup = canvas.getActiveGroup();
        if (activeObject) {
            if (confirm('Удалить элемент?')) {
                canvas.remove(activeObject);
            }
        }
    }
});
